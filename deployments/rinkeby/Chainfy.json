{
  "address": "0x4cb51bD0f9e5d5Af9f9B8a5629b9ad262885b459",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_contractName",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "code",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "digest",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "cid",
          "type": "string"
        }
      ],
      "name": "addInfo",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "code",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "digest",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "cid",
          "type": "string"
        }
      ],
      "name": "newProduct",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAllowed",
          "type": "address"
        }
      ],
      "name": "addAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_productName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_productCode",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_productDigest",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_productCID",
          "type": "string"
        }
      ],
      "name": "addProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_digest",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_cid",
          "type": "string"
        }
      ],
      "name": "addProductInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allAllowedAccounts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedAccounts",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "checkProduct",
      "outputs": [
        {
          "internalType": "string",
          "name": "_productName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_productCode",
          "type": "uint256"
        },
        {
          "internalType": "string[]",
          "name": "_productDigests",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_productCIDs",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_removeAllowed",
          "type": "address"
        }
      ],
      "name": "removeAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_contractName",
          "type": "string"
        }
      ],
      "name": "setContractName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "showAllowed",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "_allAllowedAccounts",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "showProductsByName",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "_allProducts",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf943015f3c46b5435f14d0a24492423079d907bdfc51743779309ff365b13592",
  "receipt": {
    "to": null,
    "from": "0xf4bb05Aa48aa28941507743F6D1E05c88a762f5B",
    "contractAddress": "0x4cb51bD0f9e5d5Af9f9B8a5629b9ad262885b459",
    "transactionIndex": 12,
    "gasUsed": "2052442",
    "logsBloom": "0x
    "blockHash": "0x83afda2520e0bf8ef85e3e7fff6ccd17ba33a05b575b55cc5ec73a29d417cde2",
    "transactionHash": "0xf943015f3c46b5435f14d0a24492423079d907bdfc51743779309ff365b13592",
    "logs": [
      {
        "transactionIndex": 12,
        "blockNumber": 11453710,
        "transactionHash": "0xf943015f3c46b5435f14d0a24492423079d907bdfc51743779309ff365b13592",
        "address": "0x4cb51bD0f9e5d5Af9f9B8a5629b9ad262885b459",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f4bb05aa48aa28941507743f6d1e05c88a762f5b"
        ],
        "data": "0x",
        "logIndex": 18,
        "blockHash": "0x83afda2520e0bf8ef85e3e7fff6ccd17ba33a05b575b55cc5ec73a29d417cde2"
      }
    ],
    "blockNumber": 11453710,
    "cumulativeGasUsed": "3376922",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "Chainfy"
  ],
  "numDeployments": 1,
  "solcInputHash": "904184a27a49c634e922faea42d1e058",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_contractName\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"code\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"digest\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"}],\"name\":\"addInfo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"code\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"digest\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"}],\"name\":\"newProduct\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAllowed\",\"type\":\"address\"}],\"name\":\"addAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_productName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_productCode\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_productDigest\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_productCID\",\"type\":\"string\"}],\"name\":\"addProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_digest\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_cid\",\"type\":\"string\"}],\"name\":\"addProductInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allAllowedAccounts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedAccounts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"checkProduct\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_productName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_productCode\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"_productDigests\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_productCIDs\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_removeAllowed\",\"type\":\"address\"}],\"name\":\"removeAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_contractName\",\"type\":\"string\"}],\"name\":\"setContractName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showAllowed\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_allAllowedAccounts\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showProductsByName\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"_allProducts\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enrico Gava\",\"details\":\"It is very easy\",\"kind\":\"dev\",\"methods\":{\"addProduct(string,uint256,string,string)\":{\"details\":\"it add from zero\",\"params\":{\"_productName\":\", _productCode, _productDigest, _productCID,\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"A contract for notarize the certification in blockchain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addProduct(string,uint256,string,string)\":{\"notice\":\"this function is to add product\"}},\"notice\":\"It store the digest and IPFS CID of every certification \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Chainfy.sol\":\"Chainfy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Chainfy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.5.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n// NatSpec\\n/** @title A contract for notarize the certification in blockchain\\n * @author Enrico Gava\\n * @notice It store the digest and IPFS CID of every certification \\n * @dev It is very easy\\n */ \\n\\ncontract Chainfy is Ownable {\\n    string public contractName = \\\"CryptoInnova\\\";\\n    mapping(address => bool) public allowedAccounts;\\n    address[] public allAllowedAccounts;\\n    struct Product {\\n        string productName;\\n        uint productCode;\\n        string[] productDigests;\\n        string[] productCIDs;\\n    }\\n\\n    //Product[] Products;\\n    mapping(string => Product) Products;\\n    mapping(string => bool) Existence;\\n    string[] productNameList;\\n\\n    event newProduct(string name, uint code, string digest, string cid);\\n    event addInfo(string name, uint code, string digest, string cid);\\n\\n    modifier authorizedAccounts() {\\n        require(checkAllowed(msg.sender), \\\"l'utente non ha il permesso\\\");\\n        _;\\n    }\\n\\n    constructor(string memory _contractName) {\\n        contractName = _contractName;\\n        addAllowed(msg.sender);\\n    }\\n\\n    // constructor() {\\n    //     contractName = \\\"CryptoInnova\\\";\\n    //     addAllowed(msg.sender);\\n    // }\\n\\n    function setContractName(string memory _contractName)\\n        public\\n        authorizedAccounts\\n    {\\n        contractName = _contractName;\\n    }\\n\\n    function getContractName() public view returns (string memory) {\\n        return contractName;\\n    }\\n\\n    function addAllowed(address _newAllowed) public onlyOwner {\\n        require(\\n            !allowedAccounts[_newAllowed],\\n            \\\"Account gia presente tra quelli autorizzati!\\\"\\n        );\\n        allowedAccounts[_newAllowed] = true;\\n        allAllowedAccounts.push(_newAllowed);\\n    }\\n\\n    function removeAllowed(address _removeAllowed) public onlyOwner {\\n        require(\\n            allowedAccounts[_removeAllowed],\\n            \\\"Account gia privo di autorizzazione!\\\"\\n        );\\n        allowedAccounts[_removeAllowed] = false;\\n        uint length = allAllowedAccounts.length;\\n        for (uint i; i <= length; i++) {\\n            if (allAllowedAccounts[i] == _removeAllowed) {\\n                allAllowedAccounts[i] = allAllowedAccounts[length - 1];\\n                allAllowedAccounts.pop();\\n                break;\\n            }\\n        }\\n    }\\n\\n    function showAllowed()\\n        public\\n        view\\n        returns (address[] memory _allAllowedAccounts)\\n    {\\n        return allAllowedAccounts;\\n    }\\n\\n    function checkAllowed(address _allowed)\\n        internal\\n        view\\n        returns (bool _check)\\n    {\\n        if (allowedAccounts[_allowed]) {\\n            return true;\\n        }\\n    }\\n\\n\\n    /**\\n     * @notice this function is to add product\\n     * @dev it add from zero\\n     * @param _productName, _productCode, _productDigest, _productCID,\\n     */ \\n    function addProduct(\\n        string memory _productName,\\n        uint _productCode,\\n        string memory _productDigest,\\n        string memory _productCID\\n    ) public authorizedAccounts {\\n        require(!productExists(_productName), \\\"nome prodotto gia in lista!\\\");\\n        Existence[_productName] = true;\\n        Products[_productName].productName = _productName;\\n        Products[_productName].productCode = _productCode;\\n        Products[_productName].productDigests.push(_productDigest);\\n        Products[_productName].productCIDs.push(_productCID);\\n\\n        productNameList.push(_productName);\\n        emit newProduct(\\n            _productName,\\n            _productCode,\\n            _productDigest,\\n            _productCID\\n        );\\n    }\\n\\n    function checkProduct(string memory _name)\\n        public\\n        view\\n        returns (\\n            string memory _productName,\\n            uint _productCode,\\n            string[] memory _productDigests,\\n            string[] memory _productCIDs\\n        )\\n    {\\n        require(productExists(_name), \\\"nome prodotto errato o non in lista!\\\");\\n        return (\\n            Products[_name].productName,\\n            Products[_name].productCode,\\n            Products[_name].productDigests,\\n            Products[_name].productCIDs\\n        );\\n    }\\n\\n    function addProductInfo(\\n        string memory _name,\\n        string memory _digest,\\n        string memory _cid\\n    ) public authorizedAccounts {\\n        require(productExists(_name), \\\"nome prodotto errato o non in lista!\\\");\\n        Products[_name].productDigests.push(_digest);\\n        Products[_name].productCIDs.push(_cid);\\n        emit addInfo(_name, Products[_name].productCode, _digest, _cid);\\n    }\\n\\n    function showProductsByName()\\n        public\\n        view\\n        returns (string[] memory _allProducts)\\n    {\\n        return productNameList;\\n    }\\n\\n    function productExists(string memory _productName)\\n        internal\\n        view\\n        returns (bool _exists)\\n    {\\n        if (Existence[_productName]) {\\n            return true;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0b50f4799f01427e09902371bb46962358637765ab438663a5cdaf5291c27bff\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600c81526020017f43727970746f496e6e6f766100000000000000000000000000000000000000008152506001908051906020019062000051929190620003ba565b503480156200005f57600080fd5b506040516200298d3803806200298d833981810160405281019062000085919062000607565b620000a562000099620000d660201b60201c565b620000de60201b60201c565b8060019080519060200190620000bd929190620003ba565b50620000cf33620001a260201b60201c565b50620007d8565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620001b26200030060201b60201c565b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161562000242576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200023990620006df565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506003819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b62000310620000d660201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620003366200039160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200038f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003869062000751565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b828054620003c890620007a2565b90600052602060002090601f016020900481019282620003ec576000855562000438565b82601f106200040757805160ff191683800117855562000438565b8280016001018555821562000438579182015b82811115620004375782518255916020019190600101906200041a565b5b5090506200044791906200044b565b5090565b5b80821115620004665760008160009055506001016200044c565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620004d38262000488565b810181811067ffffffffffffffff82111715620004f557620004f462000499565b5b80604052505050565b60006200050a6200046a565b9050620005188282620004c8565b919050565b600067ffffffffffffffff8211156200053b576200053a62000499565b5b620005468262000488565b9050602081019050919050565b60005b838110156200057357808201518184015260208101905062000556565b8381111562000583576000848401525b50505050565b6000620005a06200059a846200051d565b620004fe565b905082815260208101848484011115620005bf57620005be62000483565b5b620005cc84828562000553565b509392505050565b600082601f830112620005ec57620005eb6200047e565b5b8151620005fe84826020860162000589565b91505092915050565b60006020828403121562000620576200061f62000474565b5b600082015167ffffffffffffffff81111562000641576200064062000479565b5b6200064f84828501620005d4565b91505092915050565b600082825260208201905092915050565b7f4163636f756e74206769612070726573656e746520747261207175656c6c692060008201527f6175746f72697a7a617469210000000000000000000000000000000000000000602082015250565b6000620006c7602c8362000658565b9150620006d48262000669565b604082019050919050565b60006020820190508181036000830152620006fa81620006b8565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006200073960208362000658565b9150620007468262000701565b602082019050919050565b600060208201905081810360008301526200076c816200072a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620007bb57607f821691505b60208210811415620007d257620007d162000773565b5b50919050565b6121a580620007e86000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063d732ce3211610066578063d732ce321461024f578063e04610ed1461026b578063f2fde38b1461029b578063f5f5ba72146102b7576100f5565b80638da5cb5b146101b2578063a739007a146101d0578063b001029614610203578063cb8523c614610233576100f5565b80636470db2f116100d35780636470db2f146101505780636eeb5d5d1461016c578063715018a61461018a57806375d0c0dc14610194576100f5565b80630b5ee006146100fa5780631f9cdaae1461011657806336e143a914610132575b600080fd5b610114600480360381019061010f91906115b1565b6102d5565b005b610130600480360381019061012b91906115fa565b610337565b005b61013a6104e0565b60405161014791906117eb565b60405180910390f35b61016a6004803603810190610165919061186b565b6105b9565b005b610174610836565b6040516101819190611956565b60405180910390f35b6101926108c4565b005b61019c6108d8565b6040516101a991906119c2565b60405180910390f35b6101ba610966565b6040516101c791906119f3565b60405180910390f35b6101ea60048036038101906101e591906115b1565b61098f565b6040516101fa9493929190611a27565b60405180910390f35b61021d60048036038101906102189190611aad565b610ca4565b60405161022a91906119f3565b60405180910390f35b61024d6004803603810190610248919061186b565b610ce3565b005b61026960048036038101906102649190611ada565b610e36565b005b6102856004803603810190610280919061186b565b61108f565b6040516102929190611bb0565b60405180910390f35b6102b560048036038101906102b0919061186b565b6110af565b005b6102bf611133565b6040516102cc91906119c2565b60405180910390f35b6102de336111c5565b61031d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031490611c17565b60405180910390fd5b80600190805190602001906103339291906113b4565b5050565b610340336111c5565b61037f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037690611c17565b60405180910390fd5b61038883611228565b6103c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103be90611ca9565b60405180910390fd5b6004836040516103d79190611d05565b9081526020016040518091039020600201829080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906104219291906113b4565b506004836040516104329190611d05565b90815260200160405180910390206003018190806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061047c9291906113b4565b507f30a20794aaa0bb2c561a4ddf91ca37be81643f2d1a9f5a0e81686f514349ef67836004856040516104af9190611d05565b90815260200160405180910390206001015484846040516104d39493929190611d1c565b60405180910390a1505050565b60606006805480602002602001604051908101604052809291908181526020016000905b828210156105b057838290600052602060002001805461052390611da5565b80601f016020809104026020016040519081016040528092919081815260200182805461054f90611da5565b801561059c5780601f106105715761010080835404028352916020019161059c565b820191906000526020600020905b81548152906001019060200180831161057f57829003601f168201915b505050505081526020019060010190610504565b50505050905090565b6105c161126a565b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661064d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064490611e49565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600380549050905060005b818111610831578273ffffffffffffffffffffffffffffffffffffffff16600382815481106106e4576106e3611e69565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561081e57600360018361073a9190611ec7565b8154811061074b5761074a611e69565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003828154811061078a57610789611e69565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060038054806107e4576107e3611efb565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055610831565b808061082990611f2a565b9150506106b2565b505050565b606060038054806020026020016040519081016040528092919081815260200182805480156108ba57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610870575b5050505050905090565b6108cc61126a565b6108d660006112e8565b565b600180546108e590611da5565b80601f016020809104026020016040519081016040528092919081815260200182805461091190611da5565b801561095e5780601f106109335761010080835404028352916020019161095e565b820191906000526020600020905b81548152906001019060200180831161094157829003601f168201915b505050505081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600060608061099f85611228565b6109de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d590611ca9565b60405180910390fd5b6004856040516109ee9190611d05565b9081526020016040518091039020600001600486604051610a0f9190611d05565b908152602001604051809103902060010154600487604051610a319190611d05565b9081526020016040518091039020600201600488604051610a529190611d05565b9081526020016040518091039020600301838054610a6f90611da5565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9b90611da5565b8015610ae85780601f10610abd57610100808354040283529160200191610ae8565b820191906000526020600020905b815481529060010190602001808311610acb57829003601f168201915b5050505050935081805480602002602001604051908101604052809291908181526020016000905b82821015610bbc578382906000526020600020018054610b2f90611da5565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5b90611da5565b8015610ba85780601f10610b7d57610100808354040283529160200191610ba8565b820191906000526020600020905b815481529060010190602001808311610b8b57829003601f168201915b505050505081526020019060010190610b10565b50505050915080805480602002602001604051908101604052809291908181526020016000905b82821015610c8f578382906000526020600020018054610c0290611da5565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2e90611da5565b8015610c7b5780601f10610c5057610100808354040283529160200191610c7b565b820191906000526020600020905b815481529060010190602001808311610c5e57829003601f168201915b505050505081526020019060010190610be3565b50505050905093509350935093509193509193565b60038181548110610cb457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610ceb61126a565b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610d78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6f90611fe5565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506003819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610e3f336111c5565b610e7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7590611c17565b60405180910390fd5b610e8784611228565b15610ec7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebe90612051565b60405180910390fd5b6001600585604051610ed99190611d05565b908152602001604051809103902060006101000a81548160ff02191690831515021790555083600485604051610f0f9190611d05565b90815260200160405180910390206000019080519060200190610f339291906113b4565b5082600485604051610f459190611d05565b908152602001604051809103902060010181905550600484604051610f6a9190611d05565b908152602001604051809103902060020182908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610fb49291906113b4565b50600484604051610fc59190611d05565b90815260200160405180910390206003018190806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061100f9291906113b4565b5060068490806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061104b9291906113b4565b507f3b488dc9285b9bdc9eff49f16003f8ac2ceec62a7f2f75462ac22f54262f0453848484846040516110819493929190611d1c565b60405180910390a150505050565b60026020528060005260406000206000915054906101000a900460ff1681565b6110b761126a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111e906120e3565b60405180910390fd5b611130816112e8565b50565b60606001805461114290611da5565b80601f016020809104026020016040519081016040528092919081815260200182805461116e90611da5565b80156111bb5780601f10611190576101008083540402835291602001916111bb565b820191906000526020600020905b81548152906001019060200180831161119e57829003601f168201915b5050505050905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156112225760019050611223565b5b919050565b600060058260405161123a9190611d05565b908152602001604051809103902060009054906101000a900460ff16156112645760019050611265565b5b919050565b6112726113ac565b73ffffffffffffffffffffffffffffffffffffffff16611290610966565b73ffffffffffffffffffffffffffffffffffffffff16146112e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112dd9061214f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b8280546113c090611da5565b90600052602060002090601f0160209004810192826113e25760008555611429565b82601f106113fb57805160ff1916838001178555611429565b82800160010185558215611429579182015b8281111561142857825182559160200191906001019061140d565b5b509050611436919061143a565b5090565b5b8082111561145357600081600090555060010161143b565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114be82611475565b810181811067ffffffffffffffff821117156114dd576114dc611486565b5b80604052505050565b60006114f0611457565b90506114fc82826114b5565b919050565b600067ffffffffffffffff82111561151c5761151b611486565b5b61152582611475565b9050602081019050919050565b82818337600083830152505050565b600061155461154f84611501565b6114e6565b9050828152602081018484840111156115705761156f611470565b5b61157b848285611532565b509392505050565b600082601f8301126115985761159761146b565b5b81356115a8848260208601611541565b91505092915050565b6000602082840312156115c7576115c6611461565b5b600082013567ffffffffffffffff8111156115e5576115e4611466565b5b6115f184828501611583565b91505092915050565b60008060006060848603121561161357611612611461565b5b600084013567ffffffffffffffff81111561163157611630611466565b5b61163d86828701611583565b935050602084013567ffffffffffffffff81111561165e5761165d611466565b5b61166a86828701611583565b925050604084013567ffffffffffffffff81111561168b5761168a611466565b5b61169786828701611583565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156117075780820151818401526020810190506116ec565b83811115611716576000848401525b50505050565b6000611727826116cd565b61173181856116d8565b93506117418185602086016116e9565b61174a81611475565b840191505092915050565b6000611761838361171c565b905092915050565b6000602082019050919050565b6000611781826116a1565b61178b81856116ac565b93508360208202850161179d856116bd565b8060005b858110156117d957848403895281516117ba8582611755565b94506117c583611769565b925060208a019950506001810190506117a1565b50829750879550505050505092915050565b600060208201905081810360008301526118058184611776565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118388261180d565b9050919050565b6118488161182d565b811461185357600080fd5b50565b6000813590506118658161183f565b92915050565b60006020828403121561188157611880611461565b5b600061188f84828501611856565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6118cd8161182d565b82525050565b60006118df83836118c4565b60208301905092915050565b6000602082019050919050565b600061190382611898565b61190d81856118a3565b9350611918836118b4565b8060005b8381101561194957815161193088826118d3565b975061193b836118eb565b92505060018101905061191c565b5085935050505092915050565b6000602082019050818103600083015261197081846118f8565b905092915050565b600082825260208201905092915050565b6000611994826116cd565b61199e8185611978565b93506119ae8185602086016116e9565b6119b781611475565b840191505092915050565b600060208201905081810360008301526119dc8184611989565b905092915050565b6119ed8161182d565b82525050565b6000602082019050611a0860008301846119e4565b92915050565b6000819050919050565b611a2181611a0e565b82525050565b60006080820190508181036000830152611a418187611989565b9050611a506020830186611a18565b8181036040830152611a628185611776565b90508181036060830152611a768184611776565b905095945050505050565b611a8a81611a0e565b8114611a9557600080fd5b50565b600081359050611aa781611a81565b92915050565b600060208284031215611ac357611ac2611461565b5b6000611ad184828501611a98565b91505092915050565b60008060008060808587031215611af457611af3611461565b5b600085013567ffffffffffffffff811115611b1257611b11611466565b5b611b1e87828801611583565b9450506020611b2f87828801611a98565b935050604085013567ffffffffffffffff811115611b5057611b4f611466565b5b611b5c87828801611583565b925050606085013567ffffffffffffffff811115611b7d57611b7c611466565b5b611b8987828801611583565b91505092959194509250565b60008115159050919050565b611baa81611b95565b82525050565b6000602082019050611bc56000830184611ba1565b92915050565b7f6c277574656e7465206e6f6e20686120696c207065726d6573736f0000000000600082015250565b6000611c01601b83611978565b9150611c0c82611bcb565b602082019050919050565b60006020820190508181036000830152611c3081611bf4565b9050919050565b7f6e6f6d652070726f646f74746f2065727261746f206f206e6f6e20696e206c6960008201527f7374612100000000000000000000000000000000000000000000000000000000602082015250565b6000611c93602483611978565b9150611c9e82611c37565b604082019050919050565b60006020820190508181036000830152611cc281611c86565b9050919050565b600081905092915050565b6000611cdf826116cd565b611ce98185611cc9565b9350611cf98185602086016116e9565b80840191505092915050565b6000611d118284611cd4565b915081905092915050565b60006080820190508181036000830152611d368187611989565b9050611d456020830186611a18565b8181036040830152611d578185611989565b90508181036060830152611d6b8184611989565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611dbd57607f821691505b60208210811415611dd157611dd0611d76565b5b50919050565b7f4163636f756e742067696120707269766f206469206175746f72697a7a617a6960008201527f6f6e652100000000000000000000000000000000000000000000000000000000602082015250565b6000611e33602483611978565b9150611e3e82611dd7565b604082019050919050565b60006020820190508181036000830152611e6281611e26565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ed282611a0e565b9150611edd83611a0e565b925082821015611ef057611eef611e98565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000611f3582611a0e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611f6857611f67611e98565b5b600182019050919050565b7f4163636f756e74206769612070726573656e746520747261207175656c6c692060008201527f6175746f72697a7a617469210000000000000000000000000000000000000000602082015250565b6000611fcf602c83611978565b9150611fda82611f73565b604082019050919050565b60006020820190508181036000830152611ffe81611fc2565b9050919050565b7f6e6f6d652070726f646f74746f2067696120696e206c69737461210000000000600082015250565b600061203b601b83611978565b915061204682612005565b602082019050919050565b6000602082019050818103600083015261206a8161202e565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006120cd602683611978565b91506120d882612071565b604082019050919050565b600060208201905081810360008301526120fc816120c0565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612139602083611978565b915061214482612103565b602082019050919050565b600060208201905081810360008301526121688161212c565b905091905056fea264697066735822122048ac7d81e1a86a0703271ce17f258e28679e4467fbd9a0b3a221065af938704d64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063d732ce3211610066578063d732ce321461024f578063e04610ed1461026b578063f2fde38b1461029b578063f5f5ba72146102b7576100f5565b80638da5cb5b146101b2578063a739007a146101d0578063b001029614610203578063cb8523c614610233576100f5565b80636470db2f116100d35780636470db2f146101505780636eeb5d5d1461016c578063715018a61461018a57806375d0c0dc14610194576100f5565b80630b5ee006146100fa5780631f9cdaae1461011657806336e143a914610132575b600080fd5b610114600480360381019061010f91906115b1565b6102d5565b005b610130600480360381019061012b91906115fa565b610337565b005b61013a6104e0565b60405161014791906117eb565b60405180910390f35b61016a6004803603810190610165919061186b565b6105b9565b005b610174610836565b6040516101819190611956565b60405180910390f35b6101926108c4565b005b61019c6108d8565b6040516101a991906119c2565b60405180910390f35b6101ba610966565b6040516101c791906119f3565b60405180910390f35b6101ea60048036038101906101e591906115b1565b61098f565b6040516101fa9493929190611a27565b60405180910390f35b61021d60048036038101906102189190611aad565b610ca4565b60405161022a91906119f3565b60405180910390f35b61024d6004803603810190610248919061186b565b610ce3565b005b61026960048036038101906102649190611ada565b610e36565b005b6102856004803603810190610280919061186b565b61108f565b6040516102929190611bb0565b60405180910390f35b6102b560048036038101906102b0919061186b565b6110af565b005b6102bf611133565b6040516102cc91906119c2565b60405180910390f35b6102de336111c5565b61031d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031490611c17565b60405180910390fd5b80600190805190602001906103339291906113b4565b5050565b610340336111c5565b61037f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037690611c17565b60405180910390fd5b61038883611228565b6103c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103be90611ca9565b60405180910390fd5b6004836040516103d79190611d05565b9081526020016040518091039020600201829080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906104219291906113b4565b506004836040516104329190611d05565b90815260200160405180910390206003018190806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061047c9291906113b4565b507f30a20794aaa0bb2c561a4ddf91ca37be81643f2d1a9f5a0e81686f514349ef67836004856040516104af9190611d05565b90815260200160405180910390206001015484846040516104d39493929190611d1c565b60405180910390a1505050565b60606006805480602002602001604051908101604052809291908181526020016000905b828210156105b057838290600052602060002001805461052390611da5565b80601f016020809104026020016040519081016040528092919081815260200182805461054f90611da5565b801561059c5780601f106105715761010080835404028352916020019161059c565b820191906000526020600020905b81548152906001019060200180831161057f57829003601f168201915b505050505081526020019060010190610504565b50505050905090565b6105c161126a565b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661064d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064490611e49565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600380549050905060005b818111610831578273ffffffffffffffffffffffffffffffffffffffff16600382815481106106e4576106e3611e69565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561081e57600360018361073a9190611ec7565b8154811061074b5761074a611e69565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003828154811061078a57610789611e69565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060038054806107e4576107e3611efb565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055610831565b808061082990611f2a565b9150506106b2565b505050565b606060038054806020026020016040519081016040528092919081815260200182805480156108ba57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610870575b5050505050905090565b6108cc61126a565b6108d660006112e8565b565b600180546108e590611da5565b80601f016020809104026020016040519081016040528092919081815260200182805461091190611da5565b801561095e5780601f106109335761010080835404028352916020019161095e565b820191906000526020600020905b81548152906001019060200180831161094157829003601f168201915b505050505081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600060608061099f85611228565b6109de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d590611ca9565b60405180910390fd5b6004856040516109ee9190611d05565b9081526020016040518091039020600001600486604051610a0f9190611d05565b908152602001604051809103902060010154600487604051610a319190611d05565b9081526020016040518091039020600201600488604051610a529190611d05565b9081526020016040518091039020600301838054610a6f90611da5565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9b90611da5565b8015610ae85780601f10610abd57610100808354040283529160200191610ae8565b820191906000526020600020905b815481529060010190602001808311610acb57829003601f168201915b5050505050935081805480602002602001604051908101604052809291908181526020016000905b82821015610bbc578382906000526020600020018054610b2f90611da5565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5b90611da5565b8015610ba85780601f10610b7d57610100808354040283529160200191610ba8565b820191906000526020600020905b815481529060010190602001808311610b8b57829003601f168201915b505050505081526020019060010190610b10565b50505050915080805480602002602001604051908101604052809291908181526020016000905b82821015610c8f578382906000526020600020018054610c0290611da5565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2e90611da5565b8015610c7b5780601f10610c5057610100808354040283529160200191610c7b565b820191906000526020600020905b815481529060010190602001808311610c5e57829003601f168201915b505050505081526020019060010190610be3565b50505050905093509350935093509193509193565b60038181548110610cb457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610ceb61126a565b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610d78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6f90611fe5565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506003819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610e3f336111c5565b610e7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7590611c17565b60405180910390fd5b610e8784611228565b15610ec7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebe90612051565b60405180910390fd5b6001600585604051610ed99190611d05565b908152602001604051809103902060006101000a81548160ff02191690831515021790555083600485604051610f0f9190611d05565b90815260200160405180910390206000019080519060200190610f339291906113b4565b5082600485604051610f459190611d05565b908152602001604051809103902060010181905550600484604051610f6a9190611d05565b908152602001604051809103902060020182908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610fb49291906113b4565b50600484604051610fc59190611d05565b90815260200160405180910390206003018190806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061100f9291906113b4565b5060068490806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061104b9291906113b4565b507f3b488dc9285b9bdc9eff49f16003f8ac2ceec62a7f2f75462ac22f54262f0453848484846040516110819493929190611d1c565b60405180910390a150505050565b60026020528060005260406000206000915054906101000a900460ff1681565b6110b761126a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111e906120e3565b60405180910390fd5b611130816112e8565b50565b60606001805461114290611da5565b80601f016020809104026020016040519081016040528092919081815260200182805461116e90611da5565b80156111bb5780601f10611190576101008083540402835291602001916111bb565b820191906000526020600020905b81548152906001019060200180831161119e57829003601f168201915b5050505050905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156112225760019050611223565b5b919050565b600060058260405161123a9190611d05565b908152602001604051809103902060009054906101000a900460ff16156112645760019050611265565b5b919050565b6112726113ac565b73ffffffffffffffffffffffffffffffffffffffff16611290610966565b73ffffffffffffffffffffffffffffffffffffffff16146112e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112dd9061214f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b8280546113c090611da5565b90600052602060002090601f0160209004810192826113e25760008555611429565b82601f106113fb57805160ff1916838001178555611429565b82800160010185558215611429579182015b8281111561142857825182559160200191906001019061140d565b5b509050611436919061143a565b5090565b5b8082111561145357600081600090555060010161143b565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114be82611475565b810181811067ffffffffffffffff821117156114dd576114dc611486565b5b80604052505050565b60006114f0611457565b90506114fc82826114b5565b919050565b600067ffffffffffffffff82111561151c5761151b611486565b5b61152582611475565b9050602081019050919050565b82818337600083830152505050565b600061155461154f84611501565b6114e6565b9050828152602081018484840111156115705761156f611470565b5b61157b848285611532565b509392505050565b600082601f8301126115985761159761146b565b5b81356115a8848260208601611541565b91505092915050565b6000602082840312156115c7576115c6611461565b5b600082013567ffffffffffffffff8111156115e5576115e4611466565b5b6115f184828501611583565b91505092915050565b60008060006060848603121561161357611612611461565b5b600084013567ffffffffffffffff81111561163157611630611466565b5b61163d86828701611583565b935050602084013567ffffffffffffffff81111561165e5761165d611466565b5b61166a86828701611583565b925050604084013567ffffffffffffffff81111561168b5761168a611466565b5b61169786828701611583565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156117075780820151818401526020810190506116ec565b83811115611716576000848401525b50505050565b6000611727826116cd565b61173181856116d8565b93506117418185602086016116e9565b61174a81611475565b840191505092915050565b6000611761838361171c565b905092915050565b6000602082019050919050565b6000611781826116a1565b61178b81856116ac565b93508360208202850161179d856116bd565b8060005b858110156117d957848403895281516117ba8582611755565b94506117c583611769565b925060208a019950506001810190506117a1565b50829750879550505050505092915050565b600060208201905081810360008301526118058184611776565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118388261180d565b9050919050565b6118488161182d565b811461185357600080fd5b50565b6000813590506118658161183f565b92915050565b60006020828403121561188157611880611461565b5b600061188f84828501611856565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6118cd8161182d565b82525050565b60006118df83836118c4565b60208301905092915050565b6000602082019050919050565b600061190382611898565b61190d81856118a3565b9350611918836118b4565b8060005b8381101561194957815161193088826118d3565b975061193b836118eb565b92505060018101905061191c565b5085935050505092915050565b6000602082019050818103600083015261197081846118f8565b905092915050565b600082825260208201905092915050565b6000611994826116cd565b61199e8185611978565b93506119ae8185602086016116e9565b6119b781611475565b840191505092915050565b600060208201905081810360008301526119dc8184611989565b905092915050565b6119ed8161182d565b82525050565b6000602082019050611a0860008301846119e4565b92915050565b6000819050919050565b611a2181611a0e565b82525050565b60006080820190508181036000830152611a418187611989565b9050611a506020830186611a18565b8181036040830152611a628185611776565b90508181036060830152611a768184611776565b905095945050505050565b611a8a81611a0e565b8114611a9557600080fd5b50565b600081359050611aa781611a81565b92915050565b600060208284031215611ac357611ac2611461565b5b6000611ad184828501611a98565b91505092915050565b60008060008060808587031215611af457611af3611461565b5b600085013567ffffffffffffffff811115611b1257611b11611466565b5b611b1e87828801611583565b9450506020611b2f87828801611a98565b935050604085013567ffffffffffffffff811115611b5057611b4f611466565b5b611b5c87828801611583565b925050606085013567ffffffffffffffff811115611b7d57611b7c611466565b5b611b8987828801611583565b91505092959194509250565b60008115159050919050565b611baa81611b95565b82525050565b6000602082019050611bc56000830184611ba1565b92915050565b7f6c277574656e7465206e6f6e20686120696c207065726d6573736f0000000000600082015250565b6000611c01601b83611978565b9150611c0c82611bcb565b602082019050919050565b60006020820190508181036000830152611c3081611bf4565b9050919050565b7f6e6f6d652070726f646f74746f2065727261746f206f206e6f6e20696e206c6960008201527f7374612100000000000000000000000000000000000000000000000000000000602082015250565b6000611c93602483611978565b9150611c9e82611c37565b604082019050919050565b60006020820190508181036000830152611cc281611c86565b9050919050565b600081905092915050565b6000611cdf826116cd565b611ce98185611cc9565b9350611cf98185602086016116e9565b80840191505092915050565b6000611d118284611cd4565b915081905092915050565b60006080820190508181036000830152611d368187611989565b9050611d456020830186611a18565b8181036040830152611d578185611989565b90508181036060830152611d6b8184611989565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611dbd57607f821691505b60208210811415611dd157611dd0611d76565b5b50919050565b7f4163636f756e742067696120707269766f206469206175746f72697a7a617a6960008201527f6f6e652100000000000000000000000000000000000000000000000000000000602082015250565b6000611e33602483611978565b9150611e3e82611dd7565b604082019050919050565b60006020820190508181036000830152611e6281611e26565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ed282611a0e565b9150611edd83611a0e565b925082821015611ef057611eef611e98565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000611f3582611a0e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611f6857611f67611e98565b5b600182019050919050565b7f4163636f756e74206769612070726573656e746520747261207175656c6c692060008201527f6175746f72697a7a617469210000000000000000000000000000000000000000602082015250565b6000611fcf602c83611978565b9150611fda82611f73565b604082019050919050565b60006020820190508181036000830152611ffe81611fc2565b9050919050565b7f6e6f6d652070726f646f74746f2067696120696e206c69737461210000000000600082015250565b600061203b601b83611978565b915061204682612005565b602082019050919050565b6000602082019050818103600083015261206a8161202e565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006120cd602683611978565b91506120d882612071565b604082019050919050565b600060208201905081810360008301526120fc816120c0565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612139602083611978565b915061214482612103565b602082019050919050565b600060208201905081810360008301526121688161212c565b905091905056fea264697066735822122048ac7d81e1a86a0703271ce17f258e28679e4467fbd9a0b3a221065af938704d64736f6c63430008090033",
  "devdoc": {
    "author": "Enrico Gava",
    "details": "It is very easy",
    "kind": "dev",
    "methods": {
      "addProduct(string,uint256,string,string)": {
        "details": "it add from zero",
        "params": {
          "_productName": ", _productCode, _productDigest, _productCID,"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "A contract for notarize the certification in blockchain",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addProduct(string,uint256,string,string)": {
        "notice": "this function is to add product"
      }
    },
    "notice": "It store the digest and IPFS CID of every certification ",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Chainfy.sol:Chainfy",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 143,
        "contract": "contracts/Chainfy.sol:Chainfy",
        "label": "contractName",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 147,
        "contract": "contracts/Chainfy.sol:Chainfy",
        "label": "allowedAccounts",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 150,
        "contract": "contracts/Chainfy.sol:Chainfy",
        "label": "allAllowedAccounts",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 166,
        "contract": "contracts/Chainfy.sol:Chainfy",
        "label": "Products",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Product)161_storage)"
      },
      {
        "astId": 170,
        "contract": "contracts/Chainfy.sol:Chainfy",
        "label": "Existence",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      {
        "astId": 173,
        "contract": "contracts/Chainfy.sol:Chainfy",
        "label": "productNameList",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_string_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Product)161_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Chainfy.Product)",
        "numberOfBytes": "32",
        "value": "t_struct(Product)161_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Product)161_storage": {
        "encoding": "inplace",
        "label": "struct Chainfy.Product",
        "members": [
          {
            "astId": 152,
            "contract": "contracts/Chainfy.sol:Chainfy",
            "label": "productName",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 154,
            "contract": "contracts/Chainfy.sol:Chainfy",
            "label": "productCode",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 157,
            "contract": "contracts/Chainfy.sol:Chainfy",
            "label": "productDigests",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 160,
            "contract": "contracts/Chainfy.sol:Chainfy",
            "label": "productCIDs",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_string_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}